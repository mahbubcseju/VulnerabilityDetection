# %%
import os
import pickle
import json
from difflib import Differ

# %%
path='/home/mdrahman/Desktop/513/VulDet/data/D2A'

# %%
id='ffmpeg_3724a0e6b64af705d11ac9860c2e91009339a66f_0'
file_path= os.path.join(path, 'ffmpeg', 'd2a', 'ffmpeg_after_fix_extractor_0.pickle', '2020-09-10_ffmpeg_after_fix_extractor_0.pickle')
f = open(file_path, 'rb')
while True:
    try:
        data_ = pickle.load(f)
        data_json = {
            'id': data_['id'],
            'label': data_['label'],
            'project': data_['project'],
            'bug_type': data_['bug_type'],
            'label_source': data_['label_source'],
        }

        if data_['id'] != id:
            continue

        print(data_)
        print(data_['functions'])
    except EOFError:
        break

# %%
id='ffmpeg_3724a0e6b64af705d11ac9860c2e91009339a66f_1'
file_path= os.path.join(path, 'ffmpeg', 'd2a', 'ffmpeg_labeler_1.pickle', '2020-09-10_ffmpeg_labeler_1.pickle')
f = open(file_path, 'rb')
while True:
    try:
        data_ = pickle.load(f)
        data_json = {
            'id': data_['id'],
            'label': data_['label'],
            'project': data_['project'],
            'bug_type': data_['bug_type'],
            'label_source': data_['label_source'],
        }

        if data_['id'] != id:
            continue

        print(data_)
    except EOFError:
        break

# %%
import subprocess
differ = Differ()
for dir_ in ["libtiff", "httpd", "ffmpeg", "nginx", "openssl", "libav"]:
    next_path = os.path.join(path, 'jsonl', dir_)

    f_1 = open(os.path.join(next_path, 'labeler_1.jsonl'))
    f_2 = open(os.path.join(next_path, 'extractor_0.jsonl'))
    data_1 = f_1.read().split("\n")[:-1]
    data_2 = f_2.read().split("\n")[:-1]
    print(dir_, len(data_1), len(data_2))
    assert len(data_1) == len(data_2)

    for version in ['before', 'after']:
        version_path = os.path.join(path, 'program_data', '{}_version'.format(version), dir_)
        if not os.path.exists(version_path ):
            os.makedirs(version_path )
    
    diff_path = os.path.join(path, 'diff', dir_)
    if not os.path.exists(diff_path):
        os.makedirs(diff_path)

    cnt = 0
    for before, after in zip(data_1, data_2):
        before_sample = json.loads(before)
        after_sample = json.loads(after)

        id_1 = before_sample['id'].split("_")[1]
        id_2 = after_sample['id'].split("_")[1]

        assert id_1 == id_2
        if 'function' in before_sample and 'function' in after_sample:
            before_program_path = os.path.join(path, 'program_data', 'before_version', dir_, before_sample['id'] + '.c')
            f = open(before_program_path, 'w')
            f.write(before_sample['function'])
            f.close()
            
            after_program_path = os.path.join(path, 'program_data', 'after_version', dir_, after_sample['id'] + '.c')
            f = open(after_program_path, 'w')
            f.write(after_sample['function'])
            f.close()
            
            diff_program_path = os.path.join(diff_path, '{}.txt'.format(before_sample['id']))
            f=open(diff_program_path, 'w')
            subprocess.run(['diff', '-u', before_program_path, after_program_path], stdout=f)
            cnt += 1

    print(dir_, cnt)

# %%



